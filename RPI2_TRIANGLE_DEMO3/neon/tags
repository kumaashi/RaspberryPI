!_TAG_FILE_ENCODING	cp932	//
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_JP_AUTHOR	HIGASHI Hirohito	/Twitter: @h_east/
!_TAG_PROGRAM_JP_URL	http://hp.vector.co.jp/authors/VA025040/	//
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8J2	//
ADD_FIXED	.\util.h	15;"	d
ALLOCATE_BUFFER	.\mailbox.h	40;"	d
ALLOCATE_MEMORY	.\mailbox.h	28;"	d
ArmToVc	.\mailbox.c	/^uint32_t ArmToVc(void *p)    { return ((uint32_t)p) +   VCADDR_BASE; }$/;"	f
BLANK_SCREEN	.\mailbox.h	41;"	d
CHAR_COLOR	.\util.c	/^static int CHAR_COLOR = 0xFFFFFFFF;$/;"	v	file:
DIV_FIXED	.\util.h	18;"	d
DMA0_BASE	.\hwio.h	145;"	d
DMA10_BASE	.\hwio.h	155;"	d
DMA11_BASE	.\hwio.h	156;"	d
DMA12_BASE	.\hwio.h	157;"	d
DMA13_BASE	.\hwio.h	158;"	d
DMA14_BASE	.\hwio.h	159;"	d
DMA15_BASE	.\hwio.h	162;"	d
DMA1_BASE	.\hwio.h	146;"	d
DMA2_BASE	.\hwio.h	147;"	d
DMA3_BASE	.\hwio.h	148;"	d
DMA4_BASE	.\hwio.h	149;"	d
DMA5_BASE	.\hwio.h	150;"	d
DMA6_BASE	.\hwio.h	151;"	d
DMA7_BASE	.\hwio.h	152;"	d
DMA8_BASE	.\hwio.h	153;"	d
DMA9_BASE	.\hwio.h	154;"	d
DMA_ABORT	.\hwio.h	219;"	d
DMA_ACTIVE	.\hwio.h	174;"	d
DMA_BURST_LENGTH	.\hwio.h	248;"	d
DMA_BURST_LENGTH_1	.\hwio.h	232;"	d
DMA_BURST_LENGTH_10	.\hwio.h	241;"	d
DMA_BURST_LENGTH_11	.\hwio.h	242;"	d
DMA_BURST_LENGTH_12	.\hwio.h	243;"	d
DMA_BURST_LENGTH_13	.\hwio.h	244;"	d
DMA_BURST_LENGTH_14	.\hwio.h	245;"	d
DMA_BURST_LENGTH_15	.\hwio.h	246;"	d
DMA_BURST_LENGTH_16	.\hwio.h	247;"	d
DMA_BURST_LENGTH_2	.\hwio.h	233;"	d
DMA_BURST_LENGTH_3	.\hwio.h	234;"	d
DMA_BURST_LENGTH_4	.\hwio.h	235;"	d
DMA_BURST_LENGTH_5	.\hwio.h	236;"	d
DMA_BURST_LENGTH_6	.\hwio.h	237;"	d
DMA_BURST_LENGTH_7	.\hwio.h	238;"	d
DMA_BURST_LENGTH_8	.\hwio.h	239;"	d
DMA_BURST_LENGTH_9	.\hwio.h	240;"	d
DMA_CONBLK_AD	.\hwio.h	165;"	d
DMA_CS	.\hwio.h	164;"	d
DMA_DEBUG	.\hwio.h	172;"	d
DMA_DEST_AD	.\hwio.h	168;"	d
DMA_DEST_DREQ	.\hwio.h	226;"	d
DMA_DEST_IGNORE	.\hwio.h	227;"	d
DMA_DEST_INC	.\hwio.h	224;"	d
DMA_DEST_WIDTH	.\hwio.h	225;"	d
DMA_DISDEBUG	.\hwio.h	218;"	d
DMA_DREQ	.\hwio.h	177;"	d
DMA_DREQ_STOPS_DMA	.\hwio.h	179;"	d
DMA_D_STRIDE	.\hwio.h	319;"	d
DMA_EN0	.\hwio.h	344;"	d
DMA_EN1	.\hwio.h	345;"	d
DMA_EN10	.\hwio.h	354;"	d
DMA_EN11	.\hwio.h	355;"	d
DMA_EN12	.\hwio.h	356;"	d
DMA_EN13	.\hwio.h	357;"	d
DMA_EN14	.\hwio.h	358;"	d
DMA_EN2	.\hwio.h	346;"	d
DMA_EN3	.\hwio.h	347;"	d
DMA_EN4	.\hwio.h	348;"	d
DMA_EN5	.\hwio.h	349;"	d
DMA_EN6	.\hwio.h	350;"	d
DMA_EN7	.\hwio.h	351;"	d
DMA_EN8	.\hwio.h	352;"	d
DMA_EN9	.\hwio.h	353;"	d
DMA_ENABLE	.\hwio.h	161;"	d
DMA_END	.\hwio.h	175;"	d
DMA_ERROR	.\hwio.h	182;"	d
DMA_FIFO_ERROR	.\hwio.h	321;"	d
DMA_ID	.\hwio.h	324;"	d
DMA_INT	.\hwio.h	176;"	d
DMA_INT0	.\hwio.h	328;"	d
DMA_INT1	.\hwio.h	329;"	d
DMA_INT10	.\hwio.h	338;"	d
DMA_INT11	.\hwio.h	339;"	d
DMA_INT12	.\hwio.h	340;"	d
DMA_INT13	.\hwio.h	341;"	d
DMA_INT14	.\hwio.h	342;"	d
DMA_INT15	.\hwio.h	343;"	d
DMA_INT2	.\hwio.h	330;"	d
DMA_INT3	.\hwio.h	331;"	d
DMA_INT4	.\hwio.h	332;"	d
DMA_INT5	.\hwio.h	333;"	d
DMA_INT6	.\hwio.h	334;"	d
DMA_INT7	.\hwio.h	335;"	d
DMA_INT8	.\hwio.h	336;"	d
DMA_INT9	.\hwio.h	337;"	d
DMA_INTEN	.\hwio.h	221;"	d
DMA_INT_STATUS	.\hwio.h	160;"	d
DMA_LITE	.\hwio.h	327;"	d
DMA_NEXTCONBK	.\hwio.h	171;"	d
DMA_NO_WIDE_BURSTS	.\hwio.h	315;"	d
DMA_OUTSTANDING_WRITES	.\hwio.h	323;"	d
DMA_PANIC_PRIORITY	.\hwio.h	216;"	d
DMA_PANIC_PRIORITY_0	.\hwio.h	200;"	d
DMA_PANIC_PRIORITY_1	.\hwio.h	201;"	d
DMA_PANIC_PRIORITY_10	.\hwio.h	210;"	d
DMA_PANIC_PRIORITY_11	.\hwio.h	211;"	d
DMA_PANIC_PRIORITY_12	.\hwio.h	212;"	d
DMA_PANIC_PRIORITY_13	.\hwio.h	213;"	d
DMA_PANIC_PRIORITY_14	.\hwio.h	214;"	d
DMA_PANIC_PRIORITY_15	.\hwio.h	215;"	d
DMA_PANIC_PRIORITY_2	.\hwio.h	202;"	d
DMA_PANIC_PRIORITY_3	.\hwio.h	203;"	d
DMA_PANIC_PRIORITY_4	.\hwio.h	204;"	d
DMA_PANIC_PRIORITY_5	.\hwio.h	205;"	d
DMA_PANIC_PRIORITY_6	.\hwio.h	206;"	d
DMA_PANIC_PRIORITY_7	.\hwio.h	207;"	d
DMA_PANIC_PRIORITY_8	.\hwio.h	208;"	d
DMA_PANIC_PRIORITY_9	.\hwio.h	209;"	d
DMA_PAUSED	.\hwio.h	178;"	d
DMA_PERMAP	.\hwio.h	281;"	d
DMA_PERMAP_0	.\hwio.h	249;"	d
DMA_PERMAP_1	.\hwio.h	250;"	d
DMA_PERMAP_10	.\hwio.h	259;"	d
DMA_PERMAP_11	.\hwio.h	260;"	d
DMA_PERMAP_12	.\hwio.h	261;"	d
DMA_PERMAP_13	.\hwio.h	262;"	d
DMA_PERMAP_14	.\hwio.h	263;"	d
DMA_PERMAP_15	.\hwio.h	264;"	d
DMA_PERMAP_16	.\hwio.h	265;"	d
DMA_PERMAP_17	.\hwio.h	266;"	d
DMA_PERMAP_18	.\hwio.h	267;"	d
DMA_PERMAP_19	.\hwio.h	268;"	d
DMA_PERMAP_2	.\hwio.h	251;"	d
DMA_PERMAP_20	.\hwio.h	269;"	d
DMA_PERMAP_21	.\hwio.h	270;"	d
DMA_PERMAP_22	.\hwio.h	271;"	d
DMA_PERMAP_23	.\hwio.h	272;"	d
DMA_PERMAP_24	.\hwio.h	273;"	d
DMA_PERMAP_25	.\hwio.h	274;"	d
DMA_PERMAP_26	.\hwio.h	275;"	d
DMA_PERMAP_27	.\hwio.h	276;"	d
DMA_PERMAP_28	.\hwio.h	277;"	d
DMA_PERMAP_29	.\hwio.h	278;"	d
DMA_PERMAP_3	.\hwio.h	252;"	d
DMA_PERMAP_30	.\hwio.h	279;"	d
DMA_PERMAP_31	.\hwio.h	280;"	d
DMA_PERMAP_4	.\hwio.h	253;"	d
DMA_PERMAP_5	.\hwio.h	254;"	d
DMA_PERMAP_6	.\hwio.h	255;"	d
DMA_PERMAP_7	.\hwio.h	256;"	d
DMA_PERMAP_8	.\hwio.h	257;"	d
DMA_PERMAP_9	.\hwio.h	258;"	d
DMA_PRIORITY	.\hwio.h	199;"	d
DMA_PRIORITY_0	.\hwio.h	183;"	d
DMA_PRIORITY_1	.\hwio.h	184;"	d
DMA_PRIORITY_10	.\hwio.h	193;"	d
DMA_PRIORITY_11	.\hwio.h	194;"	d
DMA_PRIORITY_12	.\hwio.h	195;"	d
DMA_PRIORITY_13	.\hwio.h	196;"	d
DMA_PRIORITY_14	.\hwio.h	197;"	d
DMA_PRIORITY_15	.\hwio.h	198;"	d
DMA_PRIORITY_2	.\hwio.h	185;"	d
DMA_PRIORITY_3	.\hwio.h	186;"	d
DMA_PRIORITY_4	.\hwio.h	187;"	d
DMA_PRIORITY_5	.\hwio.h	188;"	d
DMA_PRIORITY_6	.\hwio.h	189;"	d
DMA_PRIORITY_7	.\hwio.h	190;"	d
DMA_PRIORITY_8	.\hwio.h	191;"	d
DMA_PRIORITY_9	.\hwio.h	192;"	d
DMA_READ_ERROR	.\hwio.h	322;"	d
DMA_READ_LAST_NOT_SET_ERROR	.\hwio.h	320;"	d
DMA_RESET	.\hwio.h	220;"	d
DMA_SOURCE_AD	.\hwio.h	167;"	d
DMA_SRC_DREQ	.\hwio.h	230;"	d
DMA_SRC_IGNORE	.\hwio.h	231;"	d
DMA_SRC_INC	.\hwio.h	228;"	d
DMA_SRC_WIDTH	.\hwio.h	229;"	d
DMA_STATE	.\hwio.h	325;"	d
DMA_STRIDE	.\hwio.h	170;"	d
DMA_S_STRIDE	.\hwio.h	318;"	d
DMA_TDMODE	.\hwio.h	222;"	d
DMA_TI	.\hwio.h	166;"	d
DMA_TXFR_LEN	.\hwio.h	169;"	d
DMA_VERSION	.\hwio.h	326;"	d
DMA_WAITING_FOR_OUTSTANDING_WRITES	.\hwio.h	180;"	d
DMA_WAITS	.\hwio.h	314;"	d
DMA_WAITS_0	.\hwio.h	282;"	d
DMA_WAITS_1	.\hwio.h	283;"	d
DMA_WAITS_10	.\hwio.h	292;"	d
DMA_WAITS_11	.\hwio.h	293;"	d
DMA_WAITS_12	.\hwio.h	294;"	d
DMA_WAITS_13	.\hwio.h	295;"	d
DMA_WAITS_14	.\hwio.h	296;"	d
DMA_WAITS_15	.\hwio.h	297;"	d
DMA_WAITS_16	.\hwio.h	298;"	d
DMA_WAITS_17	.\hwio.h	299;"	d
DMA_WAITS_18	.\hwio.h	300;"	d
DMA_WAITS_19	.\hwio.h	301;"	d
DMA_WAITS_2	.\hwio.h	284;"	d
DMA_WAITS_20	.\hwio.h	302;"	d
DMA_WAITS_21	.\hwio.h	303;"	d
DMA_WAITS_22	.\hwio.h	304;"	d
DMA_WAITS_23	.\hwio.h	305;"	d
DMA_WAITS_24	.\hwio.h	306;"	d
DMA_WAITS_25	.\hwio.h	307;"	d
DMA_WAITS_26	.\hwio.h	308;"	d
DMA_WAITS_27	.\hwio.h	309;"	d
DMA_WAITS_28	.\hwio.h	310;"	d
DMA_WAITS_29	.\hwio.h	311;"	d
DMA_WAITS_3	.\hwio.h	285;"	d
DMA_WAITS_30	.\hwio.h	312;"	d
DMA_WAITS_31	.\hwio.h	313;"	d
DMA_WAITS_4	.\hwio.h	286;"	d
DMA_WAITS_5	.\hwio.h	287;"	d
DMA_WAITS_6	.\hwio.h	288;"	d
DMA_WAITS_7	.\hwio.h	289;"	d
DMA_WAITS_8	.\hwio.h	290;"	d
DMA_WAITS_9	.\hwio.h	291;"	d
DMA_WAIT_FOR_OUTSTANDING_WRITES	.\hwio.h	217;"	d
DMA_WAIT_RESP	.\hwio.h	223;"	d
DMA_XLENGTH	.\hwio.h	316;"	d
DMA_YLENGTH	.\hwio.h	317;"	d
DataMemoryBarrier	.\boot.s	/^DataMemoryBarrier:$/;"	l
DataMemoryBarrierAll	.\boot.s	/^DataMemoryBarrierAll:$/;"	l
DataSyncBarrier	.\boot.s	/^DataSyncBarrier:$/;"	l
DiscardDataCache	.\boot.s	/^DiscardDataCache:$/;"	l
ENABLE_MSAAx4	.\hwio.h	75;"	d
ENABLE_QPU	.\mailbox.h	34;"	d
EXECUTE_CODE	.\mailbox.h	32;"	d
EXECUTE_QPU	.\mailbox.h	33;"	d
FCOS	.\util.h	25;"	d
FIXED	.\util.h	13;"	d
FIXED_POINT	.\util.h	11;"	d
FIXED_UNIT	.\util.h	12;"	d
FONT_RECT_SIZE	.\util.h	27;"	d
FONT_SIZE	.\util.h	26;"	d
FSIN	.\util.h	24;"	d
FSIN_TABLE_MAX	.\util.h	21;"	d
FSIN_TABLE_MAX_D4	.\util.h	22;"	d
FlushCache	.\boot.s	/^FlushCache:$/;"	l
GET_ALPHA_MODE	.\mailbox.h	46;"	d
GET_ARM_MEMORY	.\mailbox.h	12;"	d
GET_BOARD_MAC_ADDRESS	.\mailbox.h	10;"	d
GET_BOARD_MODEL	.\mailbox.h	8;"	d
GET_BOARD_REVISION	.\mailbox.h	9;"	d
GET_BOARD_SERIAL	.\mailbox.h	11;"	d
GET_CLOCKS	.\mailbox.h	14;"	d
GET_CLOCK_RATE	.\mailbox.h	19;"	d
GET_CLOCK_STATE	.\mailbox.h	18;"	d
GET_COMMAND_LINE	.\mailbox.h	68;"	d
GET_DEPTH	.\mailbox.h	44;"	d
GET_DMA_CHANNELS	.\mailbox.h	69;"	d
GET_EDID_BLOCK	.\mailbox.h	35;"	d
GET_FIRMWARE_REVISION	.\mailbox.h	7;"	d
GET_MAX_CLOCK_RATE	.\mailbox.h	21;"	d
GET_MAX_TEMPERATURE	.\mailbox.h	27;"	d
GET_MAX_VOLTAGE	.\mailbox.h	22;"	d
GET_MIN_CLOCK_RATE	.\mailbox.h	24;"	d
GET_MIN_VOLTAGE	.\mailbox.h	25;"	d
GET_OVERSCAN	.\mailbox.h	49;"	d
GET_PALETTE	.\mailbox.h	50;"	d
GET_PHYSICAL_DISPLAY	.\mailbox.h	42;"	d
GET_PITCH	.\mailbox.h	47;"	d
GET_PIXEL_ORDER	.\mailbox.h	45;"	d
GET_POWER_STATE	.\mailbox.h	15;"	d
GET_TEMPERATURE	.\mailbox.h	23;"	d
GET_TIMING	.\mailbox.h	16;"	d
GET_TURBO	.\mailbox.h	26;"	d
GET_VC_MEMORY	.\mailbox.h	13;"	d
GET_VIRTUAL_BUFFER	.\mailbox.h	43;"	d
GET_VIRTUAL_OFFSET	.\mailbox.h	48;"	d
GET_VOLTAGE	.\mailbox.h	20;"	d
GPIO_ALT0	.\hwio.h	32;"	d
GPIO_ALT1	.\hwio.h	33;"	d
GPIO_BASE	.\hwio.h	15;"	d
GPIO_CLR0	.\hwio.h	24;"	d
GPIO_CLR1	.\hwio.h	25;"	d
GPIO_GPPUD	.\hwio.h	28;"	d
GPIO_GPPUDCLK0	.\hwio.h	29;"	d
GPIO_INPUT	.\hwio.h	30;"	d
GPIO_LEV0	.\hwio.h	26;"	d
GPIO_LEV1	.\hwio.h	27;"	d
GPIO_OUTPUT	.\hwio.h	31;"	d
GPIO_SEL0	.\hwio.h	16;"	d
GPIO_SEL1	.\hwio.h	17;"	d
GPIO_SEL2	.\hwio.h	18;"	d
GPIO_SEL3	.\hwio.h	19;"	d
GPIO_SEL4	.\hwio.h	20;"	d
GPIO_SEL5	.\hwio.h	21;"	d
GPIO_SET0	.\hwio.h	22;"	d
GPIO_SET1	.\hwio.h	23;"	d
GPIO_STATUS_LED	.\hwio.h	35;"	d
IO_READ	.\hwio.h	10;"	d
IO_WRITE	.\hwio.h	11;"	d
LOCK_MEMORY	.\mailbox.h	29;"	d
MAILBOX_ARM_TO_VC	.\hwio.h	69;"	d
MAILBOX_BASE	.\hwio.h	61;"	d
MAILBOX_EMPTY	.\hwio.h	67;"	d
MAILBOX_FRAMEBUFFER	.\hwio.h	68;"	d
MAILBOX_FULL	.\hwio.h	66;"	d
MAILBOX_MEM_FLAG_COHERENT	.\mailbox.h	75;"	d
MAILBOX_MEM_FLAG_DIRECT	.\mailbox.h	74;"	d
MAILBOX_MEM_FLAG_DISCARDABLE	.\mailbox.h	72;"	d
MAILBOX_MEM_FLAG_HINT_PERMALOCK	.\mailbox.h	79;"	d
MAILBOX_MEM_FLAG_L1_NONALLOCATING	.\mailbox.h	76;"	d
MAILBOX_MEM_FLAG_NORMAL	.\mailbox.h	73;"	d
MAILBOX_MEM_FLAG_NO_INIT	.\mailbox.h	78;"	d
MAILBOX_MEM_FLAG_ZERO	.\mailbox.h	77;"	d
MAILBOX_READ	.\hwio.h	62;"	d
MAILBOX_STATUS	.\hwio.h	63;"	d
MAILBOX_VC_TO_ARM	.\hwio.h	70;"	d
MAILBOX_WRITE	.\hwio.h	64;"	d
MEM_MAX	.\hwio.h	8;"	d
MI_Ident	.\init.c	/^void MI_Ident(float *p, int idx) {$/;"	f
MInit	.\init.c	/^void MInit() {$/;"	f
MM	.\init.c	/^__attribute__((aligned(256))) float  MM[OBJECT_MAX][16];  ;$/;"	v
MMM_Mul	.\init.c	/^void MMM_Mul(float *dest, const float *A, const float *B) {$/;"	f
MMM_Mul_NEON	.\init.c	/^void MMM_Mul_NEON( float *p3, const float* p1, const float* p2 )$/;"	f
MPrint	.\init.c	/^void MPrint(float *p) {$/;"	f
MTest	.\init.c	/^void MTest(float *p) {$/;"	f
MUL_FIXED	.\util.h	17;"	d
MemoryBarrier	.\boot.s	/^MemoryBarrier:$/;"	l
Mr	.\init.c	/^__attribute__((aligned(256))) float  Mr[OBJECT_MAX][16];  ;$/;"	v
Ms	.\init.c	/^__attribute__((aligned(256))) float  Ms[OBJECT_MAX][16];  ;$/;"	v
Msss_Scale	.\init.c	/^void Msss_Scale(float *p, float x, float y, float z) {$/;"	f
Msss_Trans	.\init.c	/^void Msss_Trans(float *p, float x, float y, float z) {$/;"	f
Mt	.\init.c	/^__attribute__((aligned(256))) float  Mt[OBJECT_MAX][16];  ;$/;"	v
OBJECT_MAX	.\init.c	7;"	d	file:
PI	.\util.h	23;"	d
RELEASE_BUFFER	.\mailbox.h	59;"	d
RELEASE_MEMORY	.\mailbox.h	31;"	d
SCREEN_HEIGHT	.\hwio.h	6;"	d
SCREEN_WIDTH	.\hwio.h	5;"	d
SET_ALPHA_MODE	.\mailbox.h	64;"	d
SET_CLOCK_RATE	.\mailbox.h	37;"	d
SET_CLOCK_STATE	.\mailbox.h	36;"	d
SET_DEPTH	.\mailbox.h	62;"	d
SET_OVERSCAN	.\mailbox.h	66;"	d
SET_PALETTE	.\mailbox.h	67;"	d
SET_PHYSICAL_DISPLAY	.\mailbox.h	60;"	d
SET_PIXEL_ORDER	.\mailbox.h	63;"	d
SET_POWER_STATE	.\mailbox.h	17;"	d
SET_TURBO	.\mailbox.h	39;"	d
SET_VIRTUAL_BUFFER	.\mailbox.h	61;"	d
SET_VIRTUAL_OFFSET	.\mailbox.h	65;"	d
SET_VOLTAGE	.\mailbox.h	38;"	d
SUBSYSTEM_BASE	.\hwio.h	14;"	d
SUB_FIXED	.\util.h	16;"	d
SYST_BASE	.\hwio.h	37;"	d
SYST_CHI	.\hwio.h	39;"	d
SYST_CLO	.\hwio.h	38;"	d
SetupCache	.\boot.s	/^SetupCache:$/;"	l
TEST_ALPHA_MODE	.\mailbox.h	55;"	d
TEST_DEPTH	.\mailbox.h	53;"	d
TEST_OVERSCAN	.\mailbox.h	57;"	d
TEST_PALETTE	.\mailbox.h	58;"	d
TEST_PHYSICAL_DISPLAY	.\mailbox.h	51;"	d
TEST_PIXEL_ORDER	.\mailbox.h	54;"	d
TEST_VIRTUAL_BUFFER	.\mailbox.h	52;"	d
TEST_VIRTUAL_OFFSET	.\mailbox.h	56;"	d
TILE_COLOR_BITS	.\hwio.h	110;"	d
TILE_CTRLLIST_BINNING_AUTO	.\hwio.h	101;"	d
TILE_CTRLLIST_BINNING_CONFIG	.\hwio.h	93;"	d
TILE_CTRLLIST_BINNING_DEFAULT	.\hwio.h	102;"	d
TILE_CTRLLIST_BINNING_MS	.\hwio.h	100;"	d
TILE_CTRLLIST_BRANCH_TO_SUBLIST	.\hwio.h	81;"	d
TILE_CTRLLIST_CLEAR_COLOR	.\hwio.h	95;"	d
TILE_CTRLLIST_CLIP_WINDOW	.\hwio.h	91;"	d
TILE_CTRLLIST_FLUSH	.\hwio.h	78;"	d
TILE_CTRLLIST_FLUSH_ALL	.\hwio.h	79;"	d
TILE_CTRLLIST_HALT	.\hwio.h	76;"	d
TILE_CTRLLIST_NOP	.\hwio.h	77;"	d
TILE_CTRLLIST_NV_SHADER	.\hwio.h	89;"	d
TILE_CTRLLIST_NV_SHADER_PRE	.\hwio.h	88;"	d
TILE_CTRLLIST_PRIM_INDEX_LIST	.\hwio.h	85;"	d
TILE_CTRLLIST_PRIM_TYPE	.\hwio.h	87;"	d
TILE_CTRLLIST_RENDER_CFG_MS	.\hwio.h	105;"	d
TILE_CTRLLIST_RENDER_CFG_RGBA8888	.\hwio.h	106;"	d
TILE_CTRLLIST_RENDER_DEFAULT	.\hwio.h	107;"	d
TILE_CTRLLIST_RENDER_MODE_CONFIG	.\hwio.h	94;"	d
TILE_CTRLLIST_RENDER_TILE_COORD	.\hwio.h	96;"	d
TILE_CTRLLIST_START_BINNING	.\hwio.h	80;"	d
TILE_CTRLLIST_STATE	.\hwio.h	90;"	d
TILE_CTRLLIST_STATE_AA_POINT_LINE	.\hwio.h	137;"	d
TILE_CTRLLIST_STATE_CLOCKWISE_PRIM	.\hwio.h	135;"	d
TILE_CTRLLIST_STATE_COVERAGE_READ_TYPE	.\hwio.h	138;"	d
TILE_CTRLLIST_STATE_ENABLE_DEPTH_OFFSET	.\hwio.h	136;"	d
TILE_CTRLLIST_STATE_ENABLE_FORWARD_FACING_PRIM	.\hwio.h	133;"	d
TILE_CTRLLIST_STATE_ENABLE_REVERSE_FACING_PRIM	.\hwio.h	134;"	d
TILE_CTRLLIST_STATE_RASTERISER_OVERSAMPLE_MODE_16x	.\hwio.h	140;"	d
TILE_CTRLLIST_STATE_RASTERISER_OVERSAMPLE_MODE_4x	.\hwio.h	139;"	d
TILE_CTRLLIST_STORE_GENERAL	.\hwio.h	84;"	d
TILE_CTRLLIST_STORE_MS_RESOLVED_BUFFER	.\hwio.h	82;"	d
TILE_CTRLLIST_STORE_MS_RESOLVED_BUFFER_AND_END_FRAME	.\hwio.h	83;"	d
TILE_CTRLLIST_VERTEX_ARRAY_PRIM	.\hwio.h	86;"	d
TILE_CTRLLIST_VIEWPORT_OFFSET	.\hwio.h	92;"	d
TILE_MEM_ALLOC_ALIGN	.\hwio.h	112;"	d
TILE_MEM_ALLOC_OPTION	.\hwio.h	113;"	d
TILE_MEM_ALLOC_PAGE_NUM	.\hwio.h	131;"	d
TILE_MEM_ALLOC_SIZE	.\hwio.h	130;"	d
TILE_MEM_OFFSET_BINNIG_CTRL_LIST	.\hwio.h	116;"	d
TILE_MEM_OFFSET_BINNIG_CTRL_LIST_END	.\hwio.h	117;"	d
TILE_MEM_OFFSET_BINNING_DATA	.\hwio.h	128;"	d
TILE_MEM_OFFSET_FSHADER	.\hwio.h	123;"	d
TILE_MEM_OFFSET_FSHADER_UNIFORM	.\hwio.h	125;"	d
TILE_MEM_OFFSET_INDEX_BUFFER	.\hwio.h	126;"	d
TILE_MEM_OFFSET_MAX	.\hwio.h	129;"	d
TILE_MEM_OFFSET_RENDER_CTRL_LIST	.\hwio.h	118;"	d
TILE_MEM_OFFSET_RENDER_CTRL_LIST_END	.\hwio.h	119;"	d
TILE_MEM_OFFSET_SHADER_INFO	.\hwio.h	120;"	d
TILE_MEM_OFFSET_STATE	.\hwio.h	121;"	d
TILE_MEM_OFFSET_VERTEX_BUFFER	.\hwio.h	127;"	d
TILE_MEM_OFFSET_VSHADER	.\hwio.h	122;"	d
TILE_MEM_OFFSET_VSHADER_UNIFORM	.\hwio.h	124;"	d
TILE_SIZE	.\hwio.h	97;"	d
TILE_UNIT_BYTES	.\hwio.h	111;"	d
UART0_BASE	.\hwio.h	41;"	d
UART0_CR	.\hwio.h	49;"	d
UART0_DMACR	.\hwio.h	55;"	d
UART0_DR	.\hwio.h	42;"	d
UART0_FBRD	.\hwio.h	47;"	d
UART0_FR	.\hwio.h	44;"	d
UART0_IBRD	.\hwio.h	46;"	d
UART0_ICR	.\hwio.h	54;"	d
UART0_IFLS	.\hwio.h	50;"	d
UART0_ILPR	.\hwio.h	45;"	d
UART0_IMSC	.\hwio.h	51;"	d
UART0_ITCR	.\hwio.h	56;"	d
UART0_ITIP	.\hwio.h	57;"	d
UART0_ITOP	.\hwio.h	58;"	d
UART0_LCRH	.\hwio.h	48;"	d
UART0_MIS	.\hwio.h	53;"	d
UART0_RIS	.\hwio.h	52;"	d
UART0_RSRECR	.\hwio.h	43;"	d
UART0_TDR	.\hwio.h	59;"	d
UNFIXED	.\util.h	14;"	d
UNLOCK_MEMORY	.\mailbox.h	30;"	d
V0	.\init.c	/^__attribute__((aligned(256))) float  V0[OBJECT_MAX][4];   ;$/;"	v
V1	.\init.c	/^__attribute__((aligned(256))) float  V1[OBJECT_MAX][4];   ;$/;"	v
V2	.\init.c	/^__attribute__((aligned(256))) float  V2[OBJECT_MAX][4];   ;$/;"	v
VCADDR_BASE	.\hwio.h	74;"	d
VMV_Mult	.\init.c	/^void VMV_Mult(float dest[4], float m[16], float p[4]) {$/;"	f
VV	.\init.c	/^__attribute__((aligned(256))) float  VV[OBJECT_MAX][4];   ;$/;"	v
VVV_Add3	.\init.c	/^void VVV_Add3(float *p, float *a, float *b) {$/;"	f
VVV_Add4	.\init.c	/^void VVV_Add4(float *p, float *a, float *b) {$/;"	f
VVV_Div3	.\init.c	/^void VVV_Div3(float *p, float *a, float *b) {$/;"	f
VVV_Div4	.\init.c	/^void VVV_Div4(float *p, float *a, float *b) {$/;"	f
VVV_Mul3	.\init.c	/^void VVV_Mul3(float *p, float *a, float *b) {$/;"	f
VVV_Mul4	.\init.c	/^void VVV_Mul4(float *p, float *a, float *b) {$/;"	f
VVV_Sub3	.\init.c	/^void VVV_Sub3(float *p, float *a, float *b) {$/;"	f
VVV_Sub4	.\init.c	/^void VVV_Sub4(float *p, float *a, float *b) {$/;"	f
VVs_Add3	.\init.c	/^void VVs_Add3(float *p, float *a, float s) {$/;"	f
VVs_Add4	.\init.c	/^void VVs_Add4(float *p, float *a, float s) {$/;"	f
VVs_Div3	.\init.c	/^void VVs_Div3(float *p, float *a, float s) {$/;"	f
VVs_Div4	.\init.c	/^void VVs_Div4(float *p, float *a, float s) {$/;"	f
VVs_Mul3	.\init.c	/^void VVs_Mul3(float *p, float *a, float s) {$/;"	f
VVs_Mul4	.\init.c	/^void VVs_Mul4(float *p, float *a, float s) {$/;"	f
VVs_Sub3	.\init.c	/^void VVs_Sub3(float *p, float *a, float s) {$/;"	f
VVs_Sub4	.\init.c	/^void VVs_Sub4(float *p, float *a, float s) {$/;"	f
VcToArm	.\mailbox.c	/^uint32_t VcToArm(uint32_t p) { return (uint32_t)(p) & ~(VCADDR_BASE) ; }$/;"	f
_HWIO_H_	.\hwio.h	2;"	d
_LED_H_	.\led.h	2;"	d
_MAILBOX_H_	.\mailbox.h	2;"	d
_UART_H_	.\uart.h	2;"	d
_UTIL_H_	.\util.h	2;"	d
_core1_boot	.\boot.s	/^_core1_boot:$/;"	l
_hald_led	.\led.c	/^static void _hald_led(int count) {$/;"	f	file:
_looping	.\boot.s	/^_looping:$/;"	l
_start	.\boot.s	/^_start:$/;"	l
char_table	.\util.c	/^uint8_t char_table[16] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};$/;"	v
depth	.\mailbox.h	/^	uint32_t depth;$/;"	m	struct:mailbox_fb_t
draw_char	.\util.c	/^void draw_char(int c, int x, int y) {$/;"	f
draw_dump_data	.\util.c	/^void draw_dump_data(uint8_t *buf) {$/;"	f
draw_dword	.\util.c	/^void draw_dword(uint32_t value, int x, int y) {$/;"	f
draw_text	.\util.c	/^void draw_text(char *str, int x, int y) {$/;"	f
fontdata16x16	.\font16x16.c	/^static const uint8_t fontdata16x16[] = {$/;"	v	file:
get_fontdata16x16	.\font16x16.c	/^const uint8_t *get_fontdata16x16() {$/;"	f
get_systime	.\util.c	/^uint64_t get_systime(void) {$/;"	f
get_systime32	.\util.c	/^volatile uint32_t get_systime32(void) {$/;"	f
get_systime_ms	.\util.c	/^uint32_t get_systime_ms(void) {$/;"	f
halt_led0	.\led.c	/^void halt_led0() {$/;"	f
halt_led1	.\led.c	/^void halt_led1() {$/;"	f
height	.\mailbox.h	/^	uint32_t height;$/;"	m	struct:mailbox_fb_t
init_random	.\util.c	/^void init_random() {$/;"	f
is_fb_init	.\mailbox.c	/^int is_fb_init = 0;$/;"	v
is_init	.\led.c	/^static int is_init = 0;$/;"	v	file:
mailbox_allocate_memory	.\mailbox.c	/^uint32_t mailbox_allocate_memory(uint32_t size, uint32_t align, uint32_t flags)$/;"	f
mailbox_fb	.\mailbox.h	/^} mailbox_fb;$/;"	t	typeref:struct:mailbox_fb_t
mailbox_fb_data	.\mailbox.c	/^static mailbox_fb mailbox_fb_data __attribute__((aligned(256))) ;$/;"	v	file:
mailbox_fb_getaddr	.\mailbox.c	/^mailbox_fb *mailbox_fb_getaddr() {$/;"	f
mailbox_fb_init	.\mailbox.c	/^int32_t mailbox_fb_init(uint32_t w, uint32_t h) {$/;"	f
mailbox_fb_ptr	.\mailbox.c	/^uint8_t *mailbox_fb_ptr() {$/;"	f
mailbox_fb_set_pixel	.\mailbox.c	/^void mailbox_fb_set_pixel(uint32_t val, int x, int y) {$/;"	f
mailbox_fb_t	.\mailbox.h	/^typedef struct mailbox_fb_t {$/;"	s
mailbox_fb_test	.\mailbox.c	/^int32_t mailbox_fb_test(int shift) {$/;"	f
mailbox_free_memory	.\mailbox.c	/^uint32_t mailbox_free_memory(uint32_t handle)$/;"	f
mailbox_lock_memory	.\mailbox.c	/^uint32_t mailbox_lock_memory(uint32_t handle)$/;"	f
mailbox_qpu_enable	.\mailbox.c	/^uint32_t mailbox_qpu_enable() {$/;"	f
mailbox_read	.\mailbox.c	/^uint32_t mailbox_read(uint32_t mask) {$/;"	f
mailbox_unlock_memory	.\mailbox.c	/^uint32_t mailbox_unlock_memory(uint32_t handle)$/;"	f
mailbox_write	.\mailbox.c	/^uint32_t mailbox_write(uint32_t mask, uint32_t v) {$/;"	f
main	.\init.c	/^int main() {$/;"	f
mark_status_led	.\led.c	/^void mark_status_led() {$/;"	f
memset_t	.\util.c	/^void memset_t(void *dest, uint8_t c, uint32_t size) {$/;"	f
msleep	.\util.c	/^void msleep(uint32_t ms) {$/;"	f
msleep32	.\util.c	/^void msleep32(uint32_t ms) {$/;"	f
off_status_led	.\led.c	/^void off_status_led() {$/;"	f
on_status_led	.\led.c	/^void on_status_led() {$/;"	f
output_enable_status_led	.\led.c	/^void output_enable_status_led() {$/;"	f
p	.\mailbox.c	/^volatile static uint32_t p[256]  __attribute__((aligned(256))) ;$/;"	v	file:
pitch	.\mailbox.h	/^	uint32_t pitch;$/;"	m	struct:mailbox_fb_t
pointer	.\mailbox.h	/^	uint32_t pointer;$/;"	m	struct:mailbox_fb_t
pointer_vc	.\mailbox.h	/^	uint32_t pointer_vc;$/;"	m	struct:mailbox_fb_t
rand_a	.\util.c	/^static uint32_t rand_a = 1;$/;"	v	file:
rand_b	.\util.c	/^static uint32_t rand_b = 23456;$/;"	v	file:
rand_c	.\util.c	/^static uint32_t rand_c = 7890123;$/;"	v	file:
random	.\util.c	/^uint32_t random() {$/;"	f
reset_char_color	.\util.c	/^void reset_char_color() {$/;"	f
reset_jump	.\boot.s	/^reset_jump:$/;"	l
set_char_color	.\util.c	/^void set_char_color(uint32_t col) {$/;"	f
size	.\mailbox.h	/^	uint32_t size;$/;"	m	struct:mailbox_fb_t
stick	.\mailbox.c	/^static int32_t stick = 0;$/;"	v	file:
uart_bytedump	.\uart.c	/^void uart_bytedump(uint32_t addr, uint32_t count) {$/;"	f
uart_char_putc	.\uart.c	/^void uart_char_putc(uint8_t value) {$/;"	f
uart_debug_puts	.\uart.c	/^void uart_debug_puts(const char *s, uint32_t value) {$/;"	f
uart_dump	.\uart.c	/^void uart_dump(uint32_t addr, uint32_t count) {$/;"	f
uart_getc	.\uart.c	/^uint8_t uart_getc() {$/;"	f
uart_init	.\uart.c	/^void uart_init() {$/;"	f
uart_put_dword	.\uart.c	/^void uart_put_dword(uint32_t value) {$/;"	f
uart_putc	.\uart.c	/^void uart_putc(uint8_t c) {$/;"	f
uart_puts	.\uart.c	/^void uart_puts(const char *s) {$/;"	f
uart_wait	.\uart.c	/^static void uart_wait(int32_t count) {$/;"	f	file:
usleep	.\util.c	/^void usleep(int32_t count) {$/;"	f
vheight	.\mailbox.h	/^	uint32_t vheight;$/;"	m	struct:mailbox_fb_t
vwidth	.\mailbox.h	/^	uint32_t vwidth;$/;"	m	struct:mailbox_fb_t
width	.\mailbox.h	/^	uint32_t width;$/;"	m	struct:mailbox_fb_t
x	.\mailbox.h	/^	uint32_t x;$/;"	m	struct:mailbox_fb_t
y	.\mailbox.h	/^	uint32_t y;$/;"	m	struct:mailbox_fb_t
